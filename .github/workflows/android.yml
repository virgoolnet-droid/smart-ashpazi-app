name: Build Android APK from ZIP

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Set up Android SDK
        uses: android-actions/setup-android@v3

      - name: Accept Android SDK licenses & install packages
        run: |
          yes | sdkmanager --licenses
          sdkmanager "platform-tools" "platforms;android-34" "build-tools;34.0.0"

      - name: Install unzip
        run: sudo apt-get update && sudo apt-get install -y unzip

      - name: Pick project ZIP at repo root
        shell: bash
        run: |
          shopt -s nullglob
          files=( *.zip )
          if [ ${#files[@]} -eq 0 ]; then
            echo "No ZIP found at repo root."
            ls -la
            exit 1
          fi
          echo "ZIP_FILE=${files[0]}" >> $GITHUB_ENV
          echo "Using ZIP: ${files[0]}"

      - name: Unzip project
        run: unzip -o "$ZIP_FILE" -d project

      - name: Detect Gradle project root (settings.gradle)
        id: detect
        shell: bash
        run: |
          set -e
          ROOT_FILE=$(find project -maxdepth 3 -name "settings.gradle" -print -quit)
          if [ -z "$ROOT_FILE" ]; then
            echo "settings.gradle not found."
            find project -maxdepth 3 -print
            exit 1
          fi
          ROOT_DIR=$(dirname "$ROOT_FILE")
          echo "PROJECT_DIR=$ROOT_DIR" >> $GITHUB_ENV
          echo "Project root: $ROOT_DIR"

      - name: Ensure Gradle wrapper (Gradle 8.2.1)
        shell: bash
        run: |
          if [ ! -f "$PROJECT_DIR/gradlew" ]; then
            curl -s "https://get.sdkman.io" | bash
            source "$HOME/.sdkman/bin/sdkman-init.sh"
            sdk install gradle 8.2.1
            (cd "$PROJECT_DIR" && gradle wrapper --gradle-version 8.2.1)
          fi
          chmod +x "$PROJECT_DIR/gradlew"

      - name: Build Debug APK
        working-directory: ${{ env.PROJECT_DIR }}
        run: ./gradlew --no-daemon clean assembleDebug

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: SmartRecipeApp-Debug
          path: ${{ env.PROJECT_DIR }}/app/build/outputs/apk/debug/*.apk
